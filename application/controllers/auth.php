<?phpclass Auth extends CI_Controller {    public function __construct() {        parent::__construct();        $this->load->model('clients_model');        $this->load->model('admin_model');        $this->load->helper('form');        $this->load->library('encrypt');    }    public function index($data, $auth=null) {        if ($auth === 'admin') {            $data['title'] = 'Admin Home';            $this->load->view('templates/header', $data);            $this->load->view('pages/adminAffix');            $this->load->view('pages/admin_home', $data);            $this->load->view('templates/footer');        } elseif ($auth === 'trainer') {            $data['title'] = 'Trainer Home';            $this->load->view('templates/header', $data);            $this->load->view('pages/trainer_home', $data);            $this->load->view('templates/footer');        } else {            $data['title'] = 'Home';            $this->load->view('templates/header', $data);            $this->load->view('pages/home', $data);            $this->load->view('templates/footer');        }    }    //Function takes clients credentials and checkes them against the db,    //if successfully it passes the userID into a new session    public function clientLogin() {        $clients = $this->clients_model->get_client_login();        $refNum = $this->input->post('ref');        $dob = date('Y-m-d', strtotime($this->input->post('dob')));        foreach ($clients as $clients_item) {            $decodeRef = $this->encrypt->decode($clients_item['reference']);            if ($decodeRef === $refNum && $clients_item['dateOfBirth'] === $dob && $clients_item['verified'] === '1') {                $name = $clients_item['firstName'] . " " . $clients_item['lastName'];                $this->setSession($clients_item['userID'], $name);                $data = null;                break;            } elseif ($decodeRef === $refNum && $clients_item['dateOfBirth'] === $dob && $clients_item['verified'] === '0') {                $data['login'] = true;                $data['loginMessage'] = 'You have not activated your account.\n'                        . 'Please follow the activation instructions sent in your registration email.\n'                        . 'If you did not recieve the email then please use the resend activation button on the login box.';            } else {                $data['login'] = false;                $data['loginMessage'] = 'Login details where incorrect please try again.';            }        }        $this->index($data, null);    }    public function adminLogin() {        $admins = $this->admin_model->get_admins();        $username = $this->input->post('username');        $password = $this->input->post('password');        $auth = null;        foreach ($admins as $admin) {            $decodePas = $this->encrypt->decode($admin['password']);            if ($decodePas === $password && $admin['username'] === $username && $admin['admin'] === '1') {                //$name = $clients_item['firstName'] . " " . $clients_item['lastName'];                $this->setSession($admin['adminID'], null, 'admin');                $auth = 'admin';                $data = null;                break;            } elseif ($decodePas === $password && $admin['username'] === $username && $admin['trainer'] === '1') {                $this->setSession($admin['adminID'], null, 'trainer');                $auth = 'trainer';                $data = null;                break;            } else {                $data['login'] = false;                $data['loginMessage'] = 'Login details where incorrect please try again.';                            }        }                $this->index($data, $auth);    }    public function logout() {        $this->session->unset_userdata('clientID');        $this->session->unset_userdata('logged_in');        $this->session->unset_userdata('name');        $this->session->unset_userdata('auth');        $this->index($data = null);    }    private function setSession($userID, $name, $auth) {        $newdata = array(            'userID' => $userID,            'logged_in' => TRUE,            'name' => $name,            'auth' => $auth        );        $this->session->set_userdata($newdata);    }}